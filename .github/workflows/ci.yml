name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Detect where the code actually lives: repo root (.) or ./gepa-next
      - name: Detect project directory
        run: |
          if [ -d "gepa-next/innerloop" ]; then
            echo "PROJ_DIR=gepa-next" >> "$GITHUB_ENV"
          else
            echo "PROJ_DIR=." >> "$GITHUB_ENV"
          fi
          echo "Using PROJ_DIR=${PROJ_DIR:-.}"
      
      - name: Show layout (debug)
        run: |
          pwd
          ls -la
          [ "$PROJ_DIR" = "gepa-next" ] && ls -la gepa-next || true

      - run: python -m pip install -U pip
      - name: Install deps
        run: |
          pip install \
            "fastapi>=0.111" "uvicorn>=0.30" \
            "pydantic>=2.7" "pydantic-settings>=2.3" \
            "httpx>=0.27" "pytest>=8.2" "pytest-timeout>=2.3.1" \
            "ruff>=0.5.0" "mypy>=1.10"

      - name: Lint
        run: ruff check "$PROJ_DIR"

      - name: Type check
        run: |
          if [ -d "$PROJ_DIR/innerloop" ]; then
            mypy "$PROJ_DIR/innerloop"
          else
            echo "innerloop/ not found under $PROJ_DIR; skipping mypy"
          fi

      - name: Tests (quick)
        run: pytest -q -k "health or sse" --maxfail=1
        env:
          PYTHONPATH: ${{ github.workspace }}/${{ env.PROJ_DIR }}
        working-directory: ${{ env.PROJ_DIR }}

      - name: Tests (full)
        run: pytest -q
        env:
          PYTHONPATH: ${{ github.workspace }}/${{ env.PROJ_DIR }}
        working-directory: ${{ env.PROJ_DIR }}
